---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: preview
spec:
  replicas: {{ .replicas }}
  template:
    metadata:
      labels:
        app: preview
        tier: backend
        type: web
        env: {{ .env }}
      annotations:
        ad.datadoghq.com/tags: '{"env":"{{ .env }}"}'
        ad.datadoghq.com/preview.logs: |
          [{
            "source": "preview",
            "service": "preview"
          }]
        {{- if (eq .linkerd "true") }}
        ad.datadoghq.com/linkerd-proxy.check_names: '["linkerd"]'
        ad.datadoghq.com/linkerd-proxy.init_configs: '[{}]'
        ad.datadoghq.com/linkerd-proxy.instances: |-
          [{
            "prometheus_url": "http://%%host%%:4191/metrics"
          }]
        ad.datadoghq.com/linkerd-proxy.logs: |-
          [{
            "source": "linkerd",
            "service": "preview"
          }]
        linkerd.io/inject: enabled
        {{- end }}
    spec:
      terminationGracePeriodSeconds: 30
      containers:
      - name: preview
        image: 906997123624.dkr.ecr.us-east-1.amazonaws.com/preview:{{ gitHEAD }}
        livenessProbe:
          initialDelaySeconds: 15
          httpGet:
            path: /healthz
            port: 8000
            scheme: HTTP
        readinessProbe:
          initialDelaySeconds: 15
          httpGet:
            path: /healthz
            port: 8000
            scheme: HTTP
        resources:
          requests:
            memory: 800Mi
            cpu: 35m
          limits:
            memory: 800Mi
            cpu: 100m
        env:
          - name: ENV
            value: "{{ .env }}"
          - name: DD_AGENT_HOST
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          - name: DD_ENTITY_ID
            valueFrom:
              fieldRef:
                fieldPath: metadata.uid
          - name: DATADOG_ENV
            value: "{{ .env }}"
          - name: DATADOG_SERVICE_NAME
            value: preview
        ports:
        - containerPort: 8000
        args: [
          "ddtrace-run",
          "gunicorn", "main:app",
          "-b", "0.0.0.0:8000",
          "--log-level", "info",
          "--capture-output",
          "--error-logfile", "-"
        ]
